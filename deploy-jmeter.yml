---
- name: Deploy JMeter into Kubernetes
  hosts: localhost
  gather_facts: no
  # vars:
  #   app_name: "jmeter"
  #   git_url: "git@github.com:rafabarozzi/jmeter.git"
  #   branch: "master"
  #   file_name: "teste.jmx"

  tasks:
    - name: Create a namespace for the application
      community.kubernetes.k8s:
        state: present
        api_version: v1
        kind: Namespace
        name: "{{ app_name }}"

    - name: "Clonar o reposit√≥rio Git"
      ansible.builtin.git:
        repo: "{{ git_url }}"
        dest: "/tmp/jmeter_files"
        version: "{{ branch }}"
        accept_hostkey: yes
      run_once: true

    - name: "Criar ConfigMap com o arquivo JMX"
      community.kubernetes.k8s:
        state: present
        namespace: "{{ app_name }}"
        kind: ConfigMap
        name: jmeter-test-script
        definition:
          metadata:
            name: jmeter-test-script
          data:
            teste.jmx: "{{ lookup('file', '/tmp/jmeter_files/' + file_name) }}"
      run_once: true

    - name: Criar PV
      community.kubernetes.k8s:
        api_version: v1
        kind: PersistentVolume
        name: jmeter-pv-{{ app_name }}
        definition:
          spec:
            storageClassName: manual
            capacity:
              storage: 1Gi
            accessModes:
              - ReadWriteOnce
            hostPath:
              path: "/tmp/{{ app_name }}/results"

    - name: Criar PVC
      community.kubernetes.k8s:
        api_version: v1
        kind: PersistentVolumeClaim
        namespace: "{{ app_name }}"
        name: jmeter-pvc-{{ app_name }}
        definition:
          spec:
            storageClassName: manual
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi

    - name: Create JMeter Slaves Deployment
      community.kubernetes.k8s:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ app_name }}"
        name: jmeter-slave
        definition:
          metadata:
            name: jmeter-slave
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: jmeter-slave
            template:
              metadata:
                labels:
                  app: jmeter-slave
              spec:
                containers:
                - name: jmeter-slave
                  image: rafabarozzi/jmeter-base:latest
                  command: ["/bin/bash"]
                  args: ["-c", "/opt/apache-jmeter-${JMETER_VERSION}/bin/jmeter-server -Dserver.rmi.ssl.disable=true"]
                  resources:
                    requests:
                      cpu: "500m"
                      memory: "256Mi"
                    limits:
                      cpu: "1"
                      memory: "512Mi"

    - name: Criar Service Slaves
      community.kubernetes.k8s:
        api_version: v1
        kind: Service
        namespace: "{{ app_name }}"
        name: jmeter-slaves
        definition:
          metadata:
            name: jmeter-slaves
          spec:
            selector:
              app: jmeter-slave
            ports:
            - protocol: TCP
              port: 1099
              targetPort: 1099

    - name: Create JMeter Slaves HorizontalPodAutoscaler
      community.kubernetes.k8s:
        api_version: autoscaling/v2
        kind: HorizontalPodAutoscaler
        namespace: "{{ app_name }}"
        name: jmeter-slave-hpa
        definition:
          metadata:
            name: jmeter-slave-hpa
          spec:
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: jmeter-slave
            minReplicas: 1
            maxReplicas: 3
            metrics:
            - type: Resource
              resource:
                name: cpu
                target:
                  type: Utilization
                  averageUtilization: 80

    - name: Esperar 30 segundos
      pause:
        seconds: 30      

    - name: Create JMeter Master Job
      community.kubernetes.k8s:
        api_version: batch/v1
        kind: Job
        namespace: "{{ app_name }}"
        name: jmeter-master-job
        definition:
          metadata:
            name: jmeter-master-job
          spec:
            template:
              spec:
                containers:
                - name: jmeter-master
                  image: rafabarozzi/jmeter-base:latest
                  command: ["/bin/bash"]
                  args: ["-c", "/opt/apache-jmeter-${JMETER_VERSION}/bin/jmeter -n -t /tests/teste.jmx -Rjmeter-slaves -l /tests/results/results_{{ app_name }}.jtl -Dserver.rmi.ssl.disable=true && curl -X POST -H 'Content-Type: application/json' -d '{\"app_name\":\"{{ app_name }}\"}' http://172.18.0.1/stop"]
                  volumeMounts:
                  - name: test-script
                    mountPath: /tests
                  - name: jmeter-results
                    mountPath: /tests/results
                restartPolicy: Never
                volumes:
                - name: test-script
                  configMap:
                    name: jmeter-test-script
                - name: jmeter-results
                  persistentVolumeClaim:
                    claimName: jmeter-pvc-{{ app_name }}
